/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int findCommon(int a, int b) {
        int ans = 1;
        for (int i=2; i<=min(a, b); i++) {
            if (a % i == 0 && b % i == 0) {
                ans = i;
            }
        }
        return ans;
    }
    ListNode* insertGreatestCommonDivisors(ListNode* head) {
        ListNode * itr = head;
        while(itr->next != NULL) {
            int a = itr->val;
            int b = itr->next->val;
            int c = findCommon(a, b);
            ListNode * node = new ListNode(c);
            ListNode * temp = itr->next;
            itr->next = node;
            node->next = temp;
            itr = temp;
        }
        return head;
    }
};
