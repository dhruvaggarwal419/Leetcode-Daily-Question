/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* modifiedList(vector<int>& nums, ListNode* head) {
        unordered_set<int> s;
        for (int i=0; i<nums.size(); i++) {
            s.insert(nums[i]);
        }
        ListNode * itr = head;
        ListNode * prev = NULL;
        while(s.find(itr->val) != s.end()) {
            prev = itr;
            itr = itr->next;
            ListNode * del = prev;
            prev = NULL;
            delete del;
        }
        prev = itr;
        head = itr;
        itr = itr->next;
        while(itr != NULL) {
            if (s.find(itr->val) != s.end()) {
                prev->next = itr->next;
                ListNode * del = itr;
                itr = itr->next;
                delete del;
            } else {
                prev = itr;
                itr = itr->next;
            }
        }
        return head;
    }
};
